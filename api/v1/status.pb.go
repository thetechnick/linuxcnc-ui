// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: api/v1/status.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstopEnabled bool             `protobuf:"varint,1,opt,name=estopEnabled,proto3" json:"estopEnabled,omitempty"`
	InPosition   bool             `protobuf:"varint,2,opt,name=inPosition,proto3" json:"inPosition,omitempty"`
	MotionPaused bool             `protobuf:"varint,3,opt,name=motionPaused,proto3" json:"motionPaused,omitempty"`
	Coolant      *CoolantStatus   `protobuf:"bytes,4,opt,name=coolant,proto3" json:"coolant,omitempty"`
	Spindles     []*SpindleStatus `protobuf:"bytes,5,rep,name=spindles,proto3" json:"spindles,omitempty"`
	Joints       []*JointStatus   `protobuf:"bytes,6,rep,name=joints,proto3" json:"joints,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_status_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_status_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_api_v1_status_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetEstopEnabled() bool {
	if x != nil {
		return x.EstopEnabled
	}
	return false
}

func (x *Status) GetInPosition() bool {
	if x != nil {
		return x.InPosition
	}
	return false
}

func (x *Status) GetMotionPaused() bool {
	if x != nil {
		return x.MotionPaused
	}
	return false
}

func (x *Status) GetCoolant() *CoolantStatus {
	if x != nil {
		return x.Coolant
	}
	return nil
}

func (x *Status) GetSpindles() []*SpindleStatus {
	if x != nil {
		return x.Spindles
	}
	return nil
}

func (x *Status) GetJoints() []*JointStatus {
	if x != nil {
		return x.Joints
	}
	return nil
}

type CoolantStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Mist coolant enabled.
	Mist bool `protobuf:"varint,1,opt,name=mist,proto3" json:"mist,omitempty"`
	// Flood coolant enabled.
	Flood bool `protobuf:"varint,2,opt,name=flood,proto3" json:"flood,omitempty"`
}

func (x *CoolantStatus) Reset() {
	*x = CoolantStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_status_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoolantStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoolantStatus) ProtoMessage() {}

func (x *CoolantStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_status_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoolantStatus.ProtoReflect.Descriptor instead.
func (*CoolantStatus) Descriptor() ([]byte, []int) {
	return file_api_v1_status_proto_rawDescGZIP(), []int{1}
}

func (x *CoolantStatus) GetMist() bool {
	if x != nil {
		return x.Mist
	}
	return false
}

func (x *CoolantStatus) GetFlood() bool {
	if x != nil {
		return x.Flood
	}
	return false
}

type SpindleStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Spindle break enabled.
	Break bool `protobuf:"varint,1,opt,name=break,proto3" json:"break,omitempty"`
	// Spindle speed in rpm.
	// >0 clockwise
	// <0 counterclockwise
	Speed float64 `protobuf:"fixed64,2,opt,name=speed,proto3" json:"speed,omitempty"`
	// Spindle enabled.
	Enabled bool `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Spindle override scale.
	OverrideScale float64 `protobuf:"fixed64,4,opt,name=overrideScale,proto3" json:"overrideScale,omitempty"`
	// Spindle override enabled.
	OverrideEnabled bool `protobuf:"varint,5,opt,name=overrideEnabled,proto3" json:"overrideEnabled,omitempty"`
}

func (x *SpindleStatus) Reset() {
	*x = SpindleStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_status_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpindleStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpindleStatus) ProtoMessage() {}

func (x *SpindleStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_status_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpindleStatus.ProtoReflect.Descriptor instead.
func (*SpindleStatus) Descriptor() ([]byte, []int) {
	return file_api_v1_status_proto_rawDescGZIP(), []int{2}
}

func (x *SpindleStatus) GetBreak() bool {
	if x != nil {
		return x.Break
	}
	return false
}

func (x *SpindleStatus) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *SpindleStatus) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SpindleStatus) GetOverrideScale() float64 {
	if x != nil {
		return x.OverrideScale
	}
	return 0
}

func (x *SpindleStatus) GetOverrideEnabled() bool {
	if x != nil {
		return x.OverrideEnabled
	}
	return false
}

type JointStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of joint configuration parameter, reflects [JOINT_n]TYPE.
	// Values: Linear, Angular
	// See Joint ini configuration for details.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Joint homing status.
	// Values: Unkown, Homing, Homed.
	HomingPhase string `protobuf:"bytes,2,opt,name=homingPhase,proto3" json:"homingPhase,omitempty"`
	// Joint in position.
	InPosition bool `protobuf:"varint,3,opt,name=inPosition,proto3" json:"inPosition,omitempty"`
	// Current input position.
	InputPosition float64 `protobuf:"fixed64,4,opt,name=inputPosition,proto3" json:"inputPosition,omitempty"`
	// Commanded output position.
	OutputPosition float64 `protobuf:"fixed64,5,opt,name=outputPosition,proto3" json:"outputPosition,omitempty"`
	// Current joint velocity.
	Velocity float64 `protobuf:"fixed64,6,opt,name=velocity,proto3" json:"velocity,omitempty"`
	// Joint limits configuration and status.
	Limits *JointLimits `protobuf:"bytes,7,opt,name=limits,proto3" json:"limits,omitempty"`
}

func (x *JointStatus) Reset() {
	*x = JointStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_status_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JointStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JointStatus) ProtoMessage() {}

func (x *JointStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_status_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JointStatus.ProtoReflect.Descriptor instead.
func (*JointStatus) Descriptor() ([]byte, []int) {
	return file_api_v1_status_proto_rawDescGZIP(), []int{3}
}

func (x *JointStatus) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *JointStatus) GetHomingPhase() string {
	if x != nil {
		return x.HomingPhase
	}
	return ""
}

func (x *JointStatus) GetInPosition() bool {
	if x != nil {
		return x.InPosition
	}
	return false
}

func (x *JointStatus) GetInputPosition() float64 {
	if x != nil {
		return x.InputPosition
	}
	return 0
}

func (x *JointStatus) GetOutputPosition() float64 {
	if x != nil {
		return x.OutputPosition
	}
	return 0
}

func (x *JointStatus) GetVelocity() float64 {
	if x != nil {
		return x.Velocity
	}
	return 0
}

func (x *JointStatus) GetLimits() *JointLimits {
	if x != nil {
		return x.Limits
	}
	return nil
}

type JointLimits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Limit override enabled.
	OverrideEnabled bool `protobuf:"varint,1,opt,name=overrideEnabled,proto3" json:"overrideEnabled,omitempty"`
	// Maximum hard limit exceeded.
	HardMaxExceeded bool `protobuf:"varint,2,opt,name=hardMaxExceeded,proto3" json:"hardMaxExceeded,omitempty"`
	// Maximum soft limit exceeded.
	SoftMaxExceeded bool `protobuf:"varint,3,opt,name=softMaxExceeded,proto3" json:"softMaxExceeded,omitempty"`
	// Maximum soft limit for joint motion.
	// Reflects [JOINT_n]MAX_LIMIT.
	MaxPosition float64 `protobuf:"fixed64,4,opt,name=maxPosition,proto3" json:"maxPosition,omitempty"`
	// Minimum hard limit exceeded.
	HardMinExceeded bool `protobuf:"varint,5,opt,name=hardMinExceeded,proto3" json:"hardMinExceeded,omitempty"`
	// Minimum soft limit exceeded.
	SoftMinExceeded bool `protobuf:"varint,6,opt,name=softMinExceeded,proto3" json:"softMinExceeded,omitempty"`
	// Minimum soft limit for joint motion.
	// Reflects [JOINT_n]MIN_LIMIT.
	MinPosition float64 `protobuf:"fixed64,7,opt,name=minPosition,proto3" json:"minPosition,omitempty"`
}

func (x *JointLimits) Reset() {
	*x = JointLimits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_status_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JointLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JointLimits) ProtoMessage() {}

func (x *JointLimits) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_status_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JointLimits.ProtoReflect.Descriptor instead.
func (*JointLimits) Descriptor() ([]byte, []int) {
	return file_api_v1_status_proto_rawDescGZIP(), []int{4}
}

func (x *JointLimits) GetOverrideEnabled() bool {
	if x != nil {
		return x.OverrideEnabled
	}
	return false
}

func (x *JointLimits) GetHardMaxExceeded() bool {
	if x != nil {
		return x.HardMaxExceeded
	}
	return false
}

func (x *JointLimits) GetSoftMaxExceeded() bool {
	if x != nil {
		return x.SoftMaxExceeded
	}
	return false
}

func (x *JointLimits) GetMaxPosition() float64 {
	if x != nil {
		return x.MaxPosition
	}
	return 0
}

func (x *JointLimits) GetHardMinExceeded() bool {
	if x != nil {
		return x.HardMinExceeded
	}
	return false
}

func (x *JointLimits) GetSoftMinExceeded() bool {
	if x != nil {
		return x.SoftMinExceeded
	}
	return false
}

func (x *JointLimits) GetMinPosition() float64 {
	if x != nil {
		return x.MinPosition
	}
	return 0
}

type StatusGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusGetRequest) Reset() {
	*x = StatusGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_status_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusGetRequest) ProtoMessage() {}

func (x *StatusGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_status_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusGetRequest.ProtoReflect.Descriptor instead.
func (*StatusGetRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_status_proto_rawDescGZIP(), []int{5}
}

type StatusGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StatusGetResponse) Reset() {
	*x = StatusGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_status_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusGetResponse) ProtoMessage() {}

func (x *StatusGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_status_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusGetResponse.ProtoReflect.Descriptor instead.
func (*StatusGetResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_status_proto_rawDescGZIP(), []int{6}
}

func (x *StatusGetResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type StatusWatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusWatchRequest) Reset() {
	*x = StatusWatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_status_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusWatchRequest) ProtoMessage() {}

func (x *StatusWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_status_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusWatchRequest.ProtoReflect.Descriptor instead.
func (*StatusWatchRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_status_proto_rawDescGZIP(), []int{7}
}

type StatusWatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StatusWatchResponse) Reset() {
	*x = StatusWatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_status_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusWatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusWatchResponse) ProtoMessage() {}

func (x *StatusWatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_status_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusWatchResponse.ProtoReflect.Descriptor instead.
func (*StatusWatchResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_status_proto_rawDescGZIP(), []int{8}
}

func (x *StatusWatchResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_api_v1_status_proto protoreflect.FileDescriptor

var file_api_v1_status_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x63, 0x6e, 0x63, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x02, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x65, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6c, 0x61,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x69, 0x6e, 0x75, 0x78,
	0x63, 0x6e, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6f, 0x6c, 0x61,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6c, 0x61, 0x6e,
	0x74, 0x12, 0x3a, 0x0a, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x63, 0x6e, 0x63, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x70, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x34, 0x0a,
	0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6c, 0x69, 0x6e, 0x75, 0x78, 0x63, 0x6e, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x6a, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x22, 0x39, 0x0a, 0x0d, 0x43, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x6d, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x64, 0x22, 0xa5,
	0x01, 0x0a, 0x0d, 0x53, 0x70, 0x69, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x83, 0x02, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x50, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x68, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65,
	0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x76, 0x65,
	0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x63, 0x6e,
	0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x52, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x22, 0xa3, 0x02, 0x0a,
	0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x61,
	0x78, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x66, 0x74, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x63, 0x65, 0x65,
	0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x6f, 0x66, 0x74, 0x4d,
	0x61, 0x78, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61,
	0x78, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f,
	0x68, 0x61, 0x72, 0x64, 0x4d, 0x69, 0x6e, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x69, 0x6e, 0x45, 0x78,
	0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x66, 0x74, 0x4d, 0x69,
	0x6e, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x73, 0x6f, 0x66, 0x74, 0x4d, 0x69, 0x6e, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69,
	0x6e, 0x75, 0x78, 0x63, 0x6e, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x14, 0x0a, 0x12,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x46, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x6e, 0x75,
	0x78, 0x63, 0x6e, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xdb, 0x01, 0x0a, 0x0d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x63, 0x6e, 0x63, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x63, 0x6e,
	0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x09, 0x12, 0x07, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6b, 0x0a, 0x05, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x23, 0x2e, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x63, 0x6e, 0x63, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x69, 0x6e, 0x75,
	0x78, 0x63, 0x6e, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x30, 0x01, 0x42, 0x23, 0x5a, 0x21, 0x74, 0x68, 0x65, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x6b, 0x2e, 0x6e, 0x69, 0x6e, 0x6a, 0x61, 0x2f, 0x6c, 0x69,
	0x6e, 0x75, 0x78, 0x63, 0x6e, 0x63, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_status_proto_rawDescOnce sync.Once
	file_api_v1_status_proto_rawDescData = file_api_v1_status_proto_rawDesc
)

func file_api_v1_status_proto_rawDescGZIP() []byte {
	file_api_v1_status_proto_rawDescOnce.Do(func() {
		file_api_v1_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_status_proto_rawDescData)
	})
	return file_api_v1_status_proto_rawDescData
}

var file_api_v1_status_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_v1_status_proto_goTypes = []interface{}{
	(*Status)(nil),              // 0: linuxcnc.api.v1.Status
	(*CoolantStatus)(nil),       // 1: linuxcnc.api.v1.CoolantStatus
	(*SpindleStatus)(nil),       // 2: linuxcnc.api.v1.SpindleStatus
	(*JointStatus)(nil),         // 3: linuxcnc.api.v1.JointStatus
	(*JointLimits)(nil),         // 4: linuxcnc.api.v1.JointLimits
	(*StatusGetRequest)(nil),    // 5: linuxcnc.api.v1.StatusGetRequest
	(*StatusGetResponse)(nil),   // 6: linuxcnc.api.v1.StatusGetResponse
	(*StatusWatchRequest)(nil),  // 7: linuxcnc.api.v1.StatusWatchRequest
	(*StatusWatchResponse)(nil), // 8: linuxcnc.api.v1.StatusWatchResponse
}
var file_api_v1_status_proto_depIdxs = []int32{
	1, // 0: linuxcnc.api.v1.Status.coolant:type_name -> linuxcnc.api.v1.CoolantStatus
	2, // 1: linuxcnc.api.v1.Status.spindles:type_name -> linuxcnc.api.v1.SpindleStatus
	3, // 2: linuxcnc.api.v1.Status.joints:type_name -> linuxcnc.api.v1.JointStatus
	4, // 3: linuxcnc.api.v1.JointStatus.limits:type_name -> linuxcnc.api.v1.JointLimits
	0, // 4: linuxcnc.api.v1.StatusGetResponse.status:type_name -> linuxcnc.api.v1.Status
	0, // 5: linuxcnc.api.v1.StatusWatchResponse.status:type_name -> linuxcnc.api.v1.Status
	5, // 6: linuxcnc.api.v1.StatusService.Get:input_type -> linuxcnc.api.v1.StatusGetRequest
	7, // 7: linuxcnc.api.v1.StatusService.Watch:input_type -> linuxcnc.api.v1.StatusWatchRequest
	6, // 8: linuxcnc.api.v1.StatusService.Get:output_type -> linuxcnc.api.v1.StatusGetResponse
	8, // 9: linuxcnc.api.v1.StatusService.Watch:output_type -> linuxcnc.api.v1.StatusWatchResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_api_v1_status_proto_init() }
func file_api_v1_status_proto_init() {
	if File_api_v1_status_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_status_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_status_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoolantStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_status_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpindleStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_status_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JointStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_status_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JointLimits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_status_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_status_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_status_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusWatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_status_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusWatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_status_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_status_proto_goTypes,
		DependencyIndexes: file_api_v1_status_proto_depIdxs,
		MessageInfos:      file_api_v1_status_proto_msgTypes,
	}.Build()
	File_api_v1_status_proto = out.File
	file_api_v1_status_proto_rawDesc = nil
	file_api_v1_status_proto_goTypes = nil
	file_api_v1_status_proto_depIdxs = nil
}
